데이터베이스 객체
데이터베이스 객체란 테이블이나 뷰, 인덱스 등 데이터베이스 내에 정의하는 모든 것을 일컫는 말이다. 
단순히 객체라고 하면 C++이나 자바에서 사용하는 객체지향 프로그래밍의 '객체'와 
혼동하는 경향이 있는데, 데이터베이스 내의 객체라는 의미로 '데이터베이스 객체'라 부르는 것이다.
객체는 데이터베이스 내에 실체를 가지는 것을 말한다.(예. 테이블, 뷰, 인덱스)
객체는 데이터베이스 내에 실체를 가지는 어떤 것을 말한다. 
객체의 종류에 따라 데이터베이스에 저장되는 내용도 달라진다. 
테이블도 객체인데, 테이블의 경우 행과 열이 저장된다. 
한편 SELECT나 INSERT 등은 클라이언트에서 객체를 조작하는 SQL 명령이다. 
데이터베이스 내에 존재하는 것이 아니므로 객체라 부를 수 없다.

객체 = 데이터베이스 내에 실체를 가진다.
테이블, 뷰, 인덱스

명령 = 실체가 없다.
SELECT, INSERT 등

명명규칙
* 기존 이름이나 예약어와 중복하지 않는다.
* 숫자로 시작할 수 없다.
* 언더스코어(_) 이외의 기호는 사용할 수 없다.
* 한글을 사용할 때는 더블쿼트로 둘러싼다.
* 시스템이 허용하는 길이를 초과하지 않는다.

스키마
데이터베이스 객체는 스키마라는 그릇 안에 만들어진다. 
따라서 객체의 이름이 같아도 스키마가 서로 다르다면 상관없다. 
이와 같은 특징 때문에 데이터베이스 객체는 '스키마 객체'라 불리기도 한다. 
실제로 데이터베이스에 테이블을 작성해서 구축해나가는 작업을 '스키마 설계'라고 부른다. 
이때 스키마는 SQL 명령의 DDL을 이용하여 정의한다.

어떤 것이 스키마가 되는지는 데이터베이스 제품에 따라 달라진다. 
MySQL에서는 CREATE DATABASE 명령으로 작성한 '데이터베이스'가 스키마가 된다. 
한편 Oracle 등에서는 데이터베이스와 데이터베이스 사용자가 계층적 스키마가 된다.
테이블과 스키마는 무엇인가를 담는 그릇 역할을 한다는 점에서 비슷하다. 
테이블 안에는 열을 정의할 수 있고 스키마 안에는 테이블을 정의할 수 있다. 
각각의 그릇 안에서는 중복하지 않도록 이름을 지정한다. 
이처럼 이름이 충돌하지 않도록 기능하는 그릇을 '네임스페이스(namespace)'라고 부르기도 한다.