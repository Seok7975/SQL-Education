테이블 작성.삭제.변경

CREATE TABLE 테이블명(열 정의1, 열 정의2, ...)
DROP TABLE 테이블명
ALTER TABLE 테이블명 하부명령

SELECT, INSERT, DELETE, UPDATE는 SQL 명령 중에서도 DML로 분류된다. 
DML은 데이터를 조작하는 명령이다. 한편 DDL은 데이터를 정의하는 명령으로, 
스키마 내의 객체를 관리할 때 사용한다.

1. 테이블 작성
DDL은 모두 같은 문법을 사용한다. 
CREATE로 작성, DROP으로 삭제, ALTER로 변경할 수 있다. 
뒤이어 어떤 종류의 객체를 작성, 삭제, 변경할지를 지정한다. 
예를 들어 테이블을 작성한다면 CREATE TABLE, 뷰를 작성한다면 
CREATE VIEW와 같이 지정하면 된다.

SYNTAX CREATE TABLE
CREATE TABLE 테이블명(
열 정의1,
열 정의2,
...
)

열명은 열에 붙이는 이름이다. 명명규칙에 맞게 이름을 붙여준다.  
자료형은 INTEGER나 VARCHAR와 같은 문자열형으로 지정할 때는 
최대길이를 괄호로 묶어줘야 한다.

기본값을 설정할 때는 DEFAULT로 지정하되 자료형에 맞는 리터럴로 기술한다. 
또한, 기본값은 생략할 수 있다.

마지막으로 열이 NULL을 허용할 것인지를 지정한다. 
NULL을 명시적으로 지정하거나 생략했을 경우는 NULL을 허용한다. 
한편 NOT NULL이라고 지정하면 제약이 걸리면서 NULL이 허용되지 않는다. 

SYNTAX 열 정의
열명 자료형 [DEFAULT 기본값][NULL | NOT NULL]

CREATE TABLE로 테이블을 작성할 수 있다!

CREATE TABLE sample62(
no INTEGER NOT NULL,
a VARCHAR(30),
b DATE);

DESC sample62;

참고:
표준 SQL에서 정의 된 것은 INTEGER라는 keyword뿐이고,
mysql에서 INTEGER 의 다른 표현(이름)으로 INT 를 사용할 수 있다.

2. 테이블 삭제
필요 없는 테이블은 삭제할 수 있다. 이때 DROP TABLE 명령을 사용한다.

SYNTAX DROP TABLE
DROP TABLE 테이블명

DROP TABLE로 테이블을 삭제할 수 있다!

- 데이터 행 삭제

DROP TABLE 명령은 데이터베이스에서 테이블을 삭제한다. 
이때 테이블에 저장된 데이터도 함께 삭제된다. 
한편 테이블 정의는 그대로 둔 채 데이터만 삭제할 때는 DELETE 명령을 사용한다. 
이때 DELETE 명령에 WHERE 조건을 지정하지 않으면 테이블의 모든 행을 삭제할 수 있다.

하지만 DELETE 명령은 행 단위로 여러 가지 내부처리가 일어나므로 
삭제할 행이 많으면 처리속도가 상당히 늦어진다. 
이런 경우에는 DDL로 분류되는 TRUNCATE TABLE 명령을 사용한다. 
TRUNCATE TABLE 명령은 삭제할 행을 지정할 수 없고 WHERE 구를 지정할 수도 없지만, 
모든 행을 삭제해야 할 때 빠른 속도로 삭제할 수 있다.

SYNTAX TRUNCATE TABLE
TRUNCATE TABLE 테이블명

3. 테이블 변경
테이블을 작성해 버린 뒤에도 열 구성은 얼마든지 변경할 수 있다. 
이때 테이블 변경은 ALTER TABLE 명령을 통해 이루어진다.
테이블을 작성한 뒤에도 열을 추가하거나 데이터 최대길이를 변경하는 등 
구성을 바꿔야 하는 경우가 종종 생긴다.

이때 ALTER TABLE 명령을 사용하면 테이블에 저장되어 있는 데이터는 
그대로 남긴 채 구성만 변경할 수 있다. 
ALTER TABLE로 할 수 있는 일은 크게 다음과 같이 두 가지로 분류할 수 있다.
* 열 추가, 삭제, 변경
* 제약 추가, 삭제

SYNTAX 열 추가
ALTER TABLE 테이블명 ADD 열 정의

ALTER TABLE sample62 ADD newcol INTEGER;

DESC sample62;

ALTER TABLE ADD로 테이블에 열을 추가할 수 있다!

NOT NULL 제약이 걸린 열을 추가할 때는 기본 값을 지정해야 한다!

- 열 속성 변경

SYNTAX 열 속성 변경
ALTER TABLE 테이블명 MODIFY 열 정의

MODIFY로 열 이름은 변경할 수 없지만, 자료형이나 기본값, NOT NULL 제약 등의 속성은 
변경할 수 있다.

ALTER TABLE sample62 MODIFY newcol VARCHAR(20);
DESC sample62;

기존의 데이터 행이 존재하는 경우, 속성 변경에 따라 데이터 역시 변환된다. 
이때 만약 자료형이 변경되면 테이블에 들어간 데이터의 자료형 역시 바뀐다. 
다만 그 처리과정에서 에러가 발생하면 ALTER TABLE 명령은 실행되지 않는다.

ALTER TABLE은 비교적 새로운 명령에 속한다. 
표준화가 미처 이루어지지 않은 부분도 있어 데이터베이스에 따라 고유한 방언이 존재한다. 
예를 들어 MODIFY는 MySQL과 Oracle에서 사용할 수 있는 ALTER TABLE의 하부명령이다. 
다른 데이터베이스에서는 ALTER 하부명령으로 열 속성을 변경하기도 한다.

- 열 이름 변경
ALTER TABLE로 열 이름을 변경할 때는 CHANGE 하부명령으로 시행할 수 있다.

SYNTAX 열 이름 변경
ALTER TALBE 테이블명 CHANGE [기존 열 이름] [신규 열 정의]

열 이름을 변경할 때는 MODIFY가 아닌 CHANGE를 사용한다. 
CHANGE는 열 이름뿐만 아니라 열 속성도 변경할 수 있다. 
한편, Oracle에서는 열 이름을 변경할 경우 RENAME TO 하부명령을 사용한다.

ALTER TABLE sample62 CHANGE newcol c VARCHAR(20);
DESC sample62;

- 열 삭제
ALTER TABLE로 열을 삭제할 때는 DROP 하부명령을 사용한다.

SYNTAX 열 삭제
ALTER TABLE 테이블명 DROP 열명

ALTER TABLE sample62 DROP c;
DESC sample62;

4. ALTER TABLE로 테이블 관리

- 최대길이 연장

ALTER TABLE sample62 MODIFY a VARCHAR(50);
DESC sample62;
ALTER TABLE sample62 MODIFY a VARCHAR(20);
DESC sample62;
최대길이를 늘리는 것과 반대로 저장공간을 늘리기 위해 최대길이를 줄이고 싶은 경우도 있을 것이다. 
다만, 이때는 여러 가지 문제가 발생한다. 
먼저 기존의 행에 존재하는 데이터의 길이보다 작게 지정할 수는 없다.(문법적으로는 가능) 
작게 지정하면 저장된 데이터의 일부가 잘려나가므로 에러가 발생하기 때문이다. 
또한 열의 최대길이를 줄였다고 해서 실제 저장공간이 늘어나는 경우도 적다. 
일반적으로 최대길이를 늘리는 경우는 많지만 줄이는 경우는 별로 없다.

- 열 추가

ALTER TABLE sample62 ADD new_col INTEGER;
DESC sample62;