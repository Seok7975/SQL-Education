1. 학사("haksa")데이터베이스 생성 작업

[실습 따라하기]
1. root로 MySQL 접속하기
2. MySQL haksa 데이터베이스 생성
3. 생성된 Database 확인
4. 생성된 Database 사용하기 위해 haksa로 데이터베이스 변경

인사테이블("insa") 생성 및 데이터 입력
[실습 따라하기]
1. insa 테이블 만들기
bunho int(1) 자동증가,
name char(8) 널(null) 허용안함,
e_name char(4) 널(null) 허용안함,
town char(6) 널(null) 허용안함,
primary key 번호

2. 데이터 삽입
'1', '홍길동', 'Hong', '순천'
3. 데이터 삽입
'2', '제갈공명', 'Je', '여수'
4. 데이터 삽입
'3', '순자', 'Soon', '부산'
5. 데이터 삽입
'4', '이순신', 'Lee', '여수'


[실습 따라하기]
1. "insa" 테이블 질의
2. 주의사항으로 MySQL은 명령어를 실행하면 자동(Default)으로 Commit를 하게 되어 있다. 우선 AutoCommit를 하지 않도록 한다.
3. "insa"테이블의 내용 변경 : 번호 4번 도시(TOWN)을 한산도로 변경
4. 변경된 "insa" 테이블 질의
5. 변경된 데이터 복구작업 : 
6. "insa" 테이블 내용 변경
도시가 '여수'인 데이터를 '대구'로 변경
7. "insa" 테이블 내용 데이터베이스에 저장 : 
8. 변경된 데이터 복구작업 : 복구가 되지 않음
9. "insa" 테이블 질의

1. "insa" 테이블 변경 작업 : 번호 2의 도시(TOWN)을 "여수"로 변경

2. Savepoint "aa" 지정
3. "insa" 번호 3번 행 삭제 : DELETE 작업
4. "insa" 테이블 질의
5. "insa" 테이블 Savepoint "aa" 까지 복구
6. "insa" 테이블 질의
7. Truncate 작업 : "insa" 테이블의 삭제 처리(모든 행이 삭제 처리됨)
8  Truncate 작업 후 "insa" 테이블 복구(복구가 되지 않음)
9. "insa" 테이블 질의


학사 관리 예제 만들기
데이터베이스 및 사용자 계정 생성

[실습 따라하기]
1. root로 MySQL 접속하기
2. MySQL haksa_database 생성
3. 생성된 Database 확인
4. haksa_admin@localhost를 비밀번호 '1234'로 사용자 생성 및 haksa_database에 모든 권한 부여

[실습 따라하기]
1. 학사관리 테이블 생성
위에서 생성한 haksa_admin으로 haksa_database에 접속하자.
1. MySQL 접속하기
2. SQL 파일을 C:\sql 이라는 폴더로 복사후 table.sql 실행

테이블 데이터 삽입
1. haksa_admin으로 haksa_database 접속하기
2. data.sql 파일을 이용한 데이터 입력

[예제 4-1]STUDENT 테이블로부터 성별이 남자인 각 학생의 학번, 이름, 영문이름, 학년, 주민등록번호를 영문이름 순서로 출력하라.
[예제 4-2]학년이 1학년이고 성별이 남자인 각 학생의 학번과 이름을 출력하는데, 출력 순서는 학번 내림차순이다.
[예제 4-3]교과목 테이블에 관한 모든 정보를 출력하라
[예제 4-4]교과목 중 운영체제의 생성년도를 2006년으로 변경하라.
[예제 4-5]교과목 테이블에서 교과목코드, 교과목명, 교과목 영문이름, 생성년도를 출력하라.
[예제 4-7]교과목 중 운영체제의 생성년도를 2002년으로 변경하라.

뷰(Views)

[예제 4-8] 학적 테이블(student)의 학번, 이름, 출생년도, 나이를 출력하라.

[예제 4-9] 학적 테이블(student)의 학번, 이름, 나이로 구성된 AGES 뷰 테이블을 생성하라.

뷰는 다음과 같은 상황에서 주로 사용된다.
* 반복되는 명령문이나 루틴(routine)을 간단히 사용하고자 할 때,
* 테이블의 출력 방법을 재구성하고자 할 때,
* 여러 단계에서 select 명령문이 사용될 때,
* 데이터를 보호하고자 할 때

보안 설정

root 사용자의 데이터 보안
1) root 패스워드 설정하기

사용자 생성 및 권한 부여

(1) create 문을 사용하여 새로운 사용자 "choi"를 암호(password) "choi123"으로 생성해 보자.
(2) create 문을 사용하여 새로운 사용자 "lee@localhost"를 암호(password) "lee123" 으로 생성해 보자.
(3) "user" 테이블에서 새로이 생성된 사용자를 확인하기 위해 호스트명, 사용자, 비밀번호를 출력해 보자.

2) 사용자 권한 부여

(1)사용자 'lee'에게 'haksa' 데이터베이스를 select, insert, update, delete 할 수 있는 권한을 부여
(2)사용자 'choi'에게 'haksa' 데이터베이스를 관리할 수 있는 모든 권한을 부여
(3)사용자 'lee'는 모든 데이터베이스를 모든 권한을 가지고 관리할 수 있도록 권한을 부여

3) 사용자 권한 회수

(1) 사용자 "choi"을 "haksa" 데이터베이스에서 select 할 수 있는 권한을 회수해보자.
(2) 사용자 "lee"을 "haksa" 데이터베이스에서 select, update할 수 있는 권한을 회수해보자.

사용자 "choi"와 "lee"의 권한이 회수되었는지 확인해 보자.

4) 사용자 삭제

생성된 사용자가 데이터베이스를 권한을 알 수 있는 "db" 테이블의 정보를 알아보자.

새로이 생성된 사용자의 데이터베이스 권한을 확인하기 위해 "db" 테이블에서 호스트명, DB명, 사용자, select 권한만을 출력해보자

사용자 "choi"과 "lee"를 삭제처리 해보자.