SQL은 Structured Query Language의 약자고 '구조화된 질의 언어'

1. DDL (Data Definition Language)
만들고/고치고/지우고/이름바꾸는 명령어

데이터를 두는 공간을 '테이블'이라 하고 테이블의 형식을 '스키마'
DDL은 이러한 테이블의 스키마를 정의하는데 쓰이는 명령어
CREATE, ALTER, DROP, RENAME
TRUNCATE

2. DML (Data Manipulation Language)
DML로 데이터를 추가/변경/조회/삭제

INSERT, UPDATE, SELECT, DELETE
COMMIT, ROLLBACK

3. DCL (Data Control Language)

DDL로 테이블도 만들고/고치고/지우고/이름바꾸는 명령어
그렇게 만든 테이블에 DML로 데이터를 추가/변경/조회/삭제하는 명령어

GRANT, REVOKE

@참고 트랜잭션
논리적인 일의 단위, 물리적으로 보이는 처리단위가 아니라 시스템상의 처리단위를 말한다.

COMMIT & ROLLBACK 
 
INSERT, UPDATE, DELETE같은 데이터를 조작하는 명령어 DML(Data Manipulation Language)가 
실행되는 것과 동시에 트랜잭션이 진행이 된다.
오라클은 오토커밋 기능이 꺼져있다(옵션),

( 
show autocommit
set autocommit on
set autocommit off
)


MySQL의경우 오토커밋이기 때문에 상당한 주의를 기울여야한다. 
모든 DML문장은 상당한 주의를 기울여야한다.
이들 DML 작업이 성공적으로 처리되도록 하기위해서는 COMMIT명령을, 
작업을 취소하기 위해서는 ROLLBACK명령을 사용해야 한다. 

COMMIT
모든 작업을 정상적으로 처리하겠다고 확정하는 명령어로,
트랜잭션의 처리과정을 데이터베이스에 반영하기 위해서, 변경된 내용을 모두 영구 저장한다.
COMMIT 명령어를 수행하게되면 하나의 트랜잭션 과정을 종료하게 된다. 

ROLLBACK

작업중 문제가 생겼을 때, 트랜잭션의 처리과정에서 발생한 변경사항을 취소하여 
트랜잭션 과정을 종료 시킨다.
즉, 트랜잭션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌립니다.
쉽게 말하면 INSERT, UPDATE, DELETE하고나서 COMMIT안했다면 
ROLLBACK명령으로 원래대로 돌릴 수 있다는 말이다.
INSERT, UPDATE, DELETE명령을 사용하기 이전의 상태로 되돌리는 거다.
 
DML(insert,update,delete)문을 실행 하고나서, 
commit 문장을 실행하지 않으면 실질적인 반영이 되지 않는다.
DML문장을 실행하고 나면, 화면상에는 실행한 명령문이 온전히 적용되어, 
데이터의 내용이 바뀐것 처럼 보이는데,
아직은 반영이 안된것이다. COMMIT명령어를 실행해주면, 완전히 반영이 된 것이고, 
COMMIT명령문 실행후에는
ROLLBACK을 해줘도 , 수정전의 상태로 되돌아가지 않는다. 

되돌아 가는 명령어
rollback; 

트랜젝션 확정 명령어
commit; 

--ROLLBACK  : 트랜잭션의 처리과정에서 발생한 변경사항을 취소하다. 
단,
DML(INSERT DELETE UPDATE)가능하지만
DDL(CREATE,DROP 등) 불가능 하다.

----------------------------------------------------

트랜잭션이란

은행 현금인출기(ATM)에서 돈을 인출하는 과정을 생각해 봅시다.

현금인출을 하겠다고 기계에게 알려준뒤 현금카드를 넣어서 본인임을 인증받고,
인출할 금액을 선택하면 ATM 기는 돈을 내어줍니다.

이러한 거래에 있어서 지켜져야 할 중요한 것이 있습니다.
기계의 오동작 등으로 인하여 전산상으로는 돈을 인출한 것으로 입력이 되었는데 돈은 안나온다거나,
돈은 나왔는데 일련의 에러나 문제로 인하여서 돈을 인출한 것이 전산상으로 입력이 안되면
 상당히 심각한 문제가 발생하겠죠.

때문에 전산상으로도 입력이 정상적으로 잘 되고, 돈도 인출이 정상적으로 잘 됨을 확인하고 나서야,
인출하는 하나의 과정이 정상적으로 처리되었음을 확인할 수 있습니다.
여기서 돈을 인출하는 일련의 과정이 하나의 묶음으로 처리되어야 함을 이해하실 수 있을것입니다.
그리고 혹시 처리도중 중간에 무슨 문제가 발생한다면 진행되던 인출과정 전체를 취소하고
 다시 처음부터 시작하도록 해야 될 것입니다.

이것을 트랜잭션이라고 합니다.
transaction 의 사전적의미와도 상통합니다만, 거래함에 있어서 거래하는 양측이 다 원하는
 결과물을 얻어야만 정상적으로 처리되는 것이고 그렇지 않다라면 거래자체가 무산되어 원점으로
 되돌려져(roll back) 버리는 것이죠.
전산적으로나 데이터베이스에 있어서도 이처럼 하나의 묶음으로 처리가 이루어져야 하는 모든것에
 트랜젝션이란 개념이 사용됩니다.

롤백(roll back) 이란 것은 트랜잭션으로 인한 하나의 묶음처리가 시작되기 이전의 상태로
 되돌려지는 것을 말합니다.

커밋(commit) 이란 것은 정상적으로 처리되어서 확정(실행을 위해서 엔터키를 치는 것처럼) 한다는
 것이구요. 커밋하면 트랜잭션의 처리과정이 모두 반영되며 하나의 트랜잭션 과정이 끝나게 됩니다.

트랜잭션, 롤백... 이러한 단어들은 모든 처리가 정상적으로만 이루어진다고 한다면 필요없는
것이겠죠. 그러나 항상 예외나 에러는 발생하는 것이며, 이러한 것이 발생할 때에 적절한 처리를
위해서 존재하는 것입니다. 
