문제1
SQL 명령을 사용할 수 있는 데이터베이스는 무엇인가?
① 객체지향형 데이터베이스
② 관계형 데이터베이스
③ XML 데이터베이스

답 : ② 관계형 데이터베이스
SQL 명령은 관계형 데이터베이스에서 이용할 수 있는 데이터베이스 조작 명령이다.

문제2
클라이언트가 데이터베이스 서버에 접속할 때 필요한 것은 무엇인가?
① 사용자 인증
② 영속화
③ 웹서버

답 : ① 사용자 인증
일반적으로 데이터베이스 서버에 접속할 때는 사용자 인증이 필요하다.

문제3
다음 용어 중 SQL 명령이 아닌 것은 무엇인가?
① DML
② DDL
③ XML

답 : ③ XML
SQL 명령은 DML, DDL, DCL의 3개로 분류할 수 있다. XML은 데이터를 표기하는 방법으로 SQL 명령에 포함되지 않는다.

CREATE TABLE sample21(
no INT,
name VARCHAR(20),
birthday DATE,
address varchar(40)
);

INSERT INTO SAMPLE21 VALUES(1, '박준용', '1976-10-18', '대구광역시 수성구');
INSERT INTO SAMPLE21 VALUES(2, '김재진', NULL, '대구광역시 동구');
INSERT INTO SAMPLE21 VALUES(3, '홍길동', NULL, '서울특별시 마포구');

- 대소문자 구별
예약어와 데이터베이스 객체명은 대소문자를 구별하지 않는다. 
다음은 그 예를 나타낸 것으로, 모두 동일하게 동작한다.

select * from sample21;
Select * From Sample21;
SELECT * FROM SAMPLE21;

테이블은 행과 열로 구성된 표 형식의 데이터다!

데이터는 자료형으로 분류할 수 있다!
열은 하나의 자료형만 가질 수 있다!

값이 없는 데이터 = NULL
NULL은 데이터가 들어있지 않은 것을 의미하는 특별한 값이다!

SELECT * FROM sample21 WHERE no <> 2;

= 연산자가 서로 같은 값인지를 비교하는 연산자인 데 반해, 
<> 연산자는 서로 다른 값인지를 비교하는 연산자이다.
!= 연산자는 서로 다른 값인지를 비교하는 연산자이다.

수치형 조건식의 경우 비교할 숫자를 그대로 조건식에 표기.
문자열형을 비교할 경우는 싱글쿼트(' ')로 둘러싸 표기
날짜시간형의 경우에도 싱글쿼트로 둘러싸 표기 이때 연월일을
하이픈(-)으로 구분한다. 시각은 시분초를 콜론(:)으로 구분하여
표기한다.

문자열형의 열과 비교하기 위해서는 조건으로 지정할 값도 그 자료형에
맞춰 지정해야 한다. 한편 자료형에 맞게 표기한 상수값을 '리터럴(literal)'
이라 부른다. 문자열 리터럴은 싱글쿼트로 둘러싸 표기한다.

수치형 상수
1 100 -3.8
문자열 상수
'ABC' '홍길동'
날짜시간형 상수
'2013-01-25' '2013-03-03 10:21:00'

* NULL 값 검색
SELECT * FROM sample21;
IS NULL을 사용해 birthday가 NULL인 행만 추출

SELECT * FROM sample21 WHERE birthday IS NULL;
반대로 NULL 값이 아닌 행을 검색하고 싶다면 'IS NOT NULL'을 사용하면 된다.

CREATE TABLE sample24(no int, a int, b int ,c int);
insert into sample24 values(1, 1 ,0, 0);
insert into sample24 values(2, 0 ,1, 0);
insert into sample24 values(3, 0 ,0, 1);
insert into sample24 values(4, 2, 2, 0);
insert into sample24 values(5, 0, 2, 2);

SELECT * FROM sample24;
a 열과 b 열이 모두 0이 아닌 행 검색
SELECT * FROM sample24 WHERE a <> 0 AND b <> 0;

SELECT * FROM sample24;
a 열이 0이 아니거나 b열이 0이 아닌 행을 검색
SELECT * FROM sample24 WHERE a <> 0 OR b <> 0;

AND는 OR에 비해 우선 순위가 높다.

NOT으로 조합

SELECT * FROM sample24;
a열이 0이 아니거나 b열이 0이 아닌 행을 제외한 나머지 행을검색
SELECT * FROM sample24 WHERE NOT(a<>0 OR b<>0);

패턴 매칭에 의한 검색
SYNTAX LIKE
열 LIKE 패턴

CREATE TABLE sample25(no int, text varchar(100));
INSERT INTO sample25 values(1, 'SQL은 RDBMS를 조작하는 언어이다.');
INSERT INTO sample25 values(2, 'LIKE에서는 메타문자 %와 _를 사용할 수 있다.');
INSERT INTO sample25 values(3, 'LIKE는 SQL에서 사용할 수 있는 술어 중 하나이다.');

LIKE 술어를 사용하여 패턴 매칭으로 검색할 수 있다!
패턴을 정의할 때 사용할 수 있는 메타문자로는 %와 _이 있다!

SELECT * FROM sample25;

Text열이 'SQL을 포함하는 행을 검색
SELECT * FROM sample25 WHERE text LIKE 'SQL%';  // SQL로 시작하는
SELECT * FROM sample25 WHERE text LIKE '%SQL';  // SQL로 끝나는

SELECT * FROM sample25;

Text열이 'SQL을 포함하는 행을 검색
SELECT * FROM sample25 WHERE text LIKE '%SQL%';  // SQL이 들어간

CREATE TABLE sample251(text varchar(50));
INSERT INTO sample251 values('a');
INSERT INTO sample251 values('ab');
INSERT INTO sample251 values('abc');
INSERT INTO sample251 values('가');
INSERT INTO sample251 values('가나');
INSERT INTO sample251 values('가나다');
INSERT INTO sample251 values('Hi Alice');
INSERT INTO sample251 values('안녕하세요 반갑습니다.');

SELECT * FROM sample251 WHERE text LIKE '_';		// 문자 한글자
SELECT * FROM sample251 WHERE text LIKE '__';	// 문자 두글자
SELECT * FROM sample251 WHERE text LIKE '___';	// 문자 세글자
SELECT * FROM sample251 WHERE text LIKE 'a__';	// a로 시작하는 총 세글자
SELECT * FROM sample251 WHERE text LIKE '__c';	// c로 끝나는 총 세글자
SELECT * FROM sample251 WHERE text LIKE '가_다';	// 가로 시작하고 다로 끝나는 총 세글자

LIKE로 %를 검색하기	// %자체가 특수문자라 %를 검색하기위해선 \%를 해야함

SELECT * FROM sample25;
Text열이 %를 포함하는 행을 검색
SELECT * FROM sample25 WHERE text LIKE '%\%%';
SELECT * FROM sample25 WHERE text LIKE '%';  # 모든 행이 다 출력

%를 LIKE로 검색할 경우에는 \%로 한다!
_를 LIKE로 검색할 경우에는 \_로 한다.		//마찬가지로 _도 검색하기 위해선 \_

문자열 상수 '의 이스케이프

메타문자를 검색할 때처럼 문자열 상수를 검색할 때도 같은 문제가 발생한다. 
문자열 상수는 '문자열'과 같이 '로 둘러싸 표기한다. 
그렇다면, 문자열 상수 안에 '를 포함하고 싶을 경우에는 어떻게 해야 할지 알아보자.

표준 SQL에서는 '를 2개 연속해서 기술하는 것으로 이스케이프 처리를 할 수 있다. 
예를 들면 'It's'라는 문자열을 문자열 상수로 표기하면 'It''s'로 쓴다. 
또한 '하나만 문자열 데이터일 경우에는 '''' 으로 쓰면 된다.

SQL뿐만 아니라 프로그래밍 언어에서는 시작과 끝이 구분되지 않으면 에러가 발생한다. 
SQL에서는 싱글쿼트로 문자열 상수를 기술하는데 
시작의 '과 끝의 '이 정확하게 표기되지 않으면 에러가 발생하므로 주의해야 한다.

연습문제
문제1
WHERE 구로 조건식을 지정하는 것으로 테이블에서 원하는 (    )을 검색할 수 있습니다. 다음 중 (   )에 해당하는 것은 무엇인가?
① 행
② 열
③ 조건식

답 : ① 행
WHERE 구에 조건을 지정해 테이블에서 원하는 행을 검색할 수 있다.

문제2
NULL 값을 가지는 행을 검색할 경우 사용하는 연산자는 무엇인가?
① =
② <>
③ IS NULL

답 : ③ IS NULL
= 연산자로는 NULL 값을 비교할 수 없다. NULL 인지 아닌지를 비교할 때는 IS NULL 술어를 사용한다.

문제3
나이가 20세 이상인 여성만 검색할 경우 '나이가 20세이상'이라는 조건식과 '여성이다'라는 조건식을 조합하여 WHERE 구에 지정하는데, 이 경우 필요한 논리 연산자는 무엇인가?

① AND
② OR
③ NOT

답 : ① AND
A와 B라는 양쪽 조건식이 모두 참일 경우 'A 및 B'를 성립시키기 위해서는 AND 논리 연산자를 사용한다.